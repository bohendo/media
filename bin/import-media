#!/bin/bash

media=${MEDIA_DIR:-$HOME/Media} 

fail="❌"
good="✅"
warn="⚠️ "

if [[ -z "$(command -v exiftool)" ]]
then echo "$fail Install exiftool first" && exit 1
fi

if [[ ! -d "$media" ]]
then mkdir -p "$media"
fi

target="$1"
if [[ ! -f "$target" ]]
then echo "$fail File does not exist at $target" && exit 1
fi

ext=$(exiftool -FileTypeExtension "$target" 2> /dev/null | sed 's/^.*: //')
if [[ \
  "$ext" != "avi" &&\
  "$ext" != "gif" &&\
  "$ext" != "jpg" &&\
  "$ext" != "mov" &&\
  "$ext" != "mp4" &&\
  "$ext" != "png" \
  ]]
then echo "$fail Unknown FileTypeExtension $ext for $target" && exit 1
fi

function getCreateDate {
  exiftool -CreateDate "$1" 2> /dev/null \
    | sed 's/.*  ://' \
    | sed 's/: /:0/g' \
    | sed 's/://g' \
    | sed 's/ /-/g' \
    | sed 's/-$//' \
    | sed 's/^-//'
}

created=$(getCreateDate "$target")
if [[ -z "$created" ]]
then
  echo "$warn No available CreateDate exif data for $target"

  if [[ "$target" =~ (IMG|DOC|VID)-[[:digit:]]{8}-WA[[:digit:]]{4,}.* ]]
  then
    date="$(echo "$target" | cut -d "-" -f 2)-000000"
    exiftool -CreateDate="${date::4}:${date:4:2}:${date:6:2} 00:00:00" "$target"
    created=$(getCreateDate "$target")
    echo "Updated exif data w new create date: ${created}"
  else
    created="00000000-000000" # TODO: check to see if the filename includes a date?
    echo "Using unknown create date: ${created}"
  fi

fi

full_digest=$(sha256sum "$target" | cut -d " " -f 1)
digest=$(echo "$full_digest" | head -c 8)

name="$created-$digest.$ext"
path="$media/$name"
trash=$media/.trash

if grep -qs "$full_digest" < "$trash"
then echo "$warn $name has already been deleted, skipping import" && exit 0
fi

if [[ -f "$path" ]]
then
  dup_digest=$(sha256sum "$path" | cut -d " " -f 1)
  if [[ "$dup_digest" == "$full_digest" ]]
  then echo "$good Destination $name already exists w the same digest as $target"
  else echo "$fail Destination $name already exists w DIFFERENT digest than $target"
  fi
  exit 0
fi

# Check for other files in media w the same digest
if ! dups=$(find "$media/" -type "f" -name "*-$digest.*")
then echo "$fail Failed to search for files with digest of $digest" && exit 1
fi
if [[ -n "$dups" ]]
then
  for dup in $dups
  do
    dup_digest=$(sha256sum "$dup" | cut -d " " -f 1)
    if [[ "$dup_digest" == "$full_digest" ]]
    then echo "$good $dup & target have same digest: $dup_digest"
    else echo "$warn $dups ($dup_digest) & target ($full_digest) have similar digests"
    fi
  done
  exit 1
fi

if [[ "$2" == "-n" ]]
then echo "$good Copying $target to $path"
elif [[ "$2" == "-y" ]]
then
  cp -i "$target" "$path"
  echo "$good Copied $target to $path"
  chmod 644 "$path"

else
  echo "Use the 2nd arg to specify whether or not you actually want to make changes"
  echo "  -n  No I don't want to make changes, show me what the changes would be"
  echo "  -y  Yes I want to make changes"
fi
